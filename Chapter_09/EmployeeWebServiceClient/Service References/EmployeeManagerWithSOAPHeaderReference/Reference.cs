//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap")]
    public interface EmployeeManagerWithSOAPHeaderSoap {
        
        // CODEGEN: Generating message contract since message SelectAllRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllResponse SelectAll(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectAll", ReplyAction="*")]
        System.Threading.Tasks.Task<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllResponse> SelectAllAsync(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllRequest request);
        
        // CODEGEN: Generating message contract since message SelectByIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDResponse SelectByID(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectByID", ReplyAction="*")]
        System.Threading.Tasks.Task<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDResponse> SelectByIDAsync(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDRequest request);
        
        // CODEGEN: Generating message contract since message UpdateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateResponse Update(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        System.Threading.Tasks.Task<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateResponse> UpdateAsync(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EmployeeManagerHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ClientKey {
            get {
                return this.clientKeyField;
            }
            set {
                this.clientKeyField = value;
                this.RaisePropertyChanged("ClientKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Employee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int employeeIDField;
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string homePhoneField;
        
        private string notesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int EmployeeID {
            get {
                return this.employeeIDField;
            }
            set {
                this.employeeIDField = value;
                this.RaisePropertyChanged("EmployeeID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
                this.RaisePropertyChanged("HomePhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
                this.RaisePropertyChanged("Notes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelectAll", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SelectAllRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader;
        
        public SelectAllRequest() {
        }
        
        public SelectAllRequest(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader) {
            this.EmployeeManagerHeader = EmployeeManagerHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelectAllResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SelectAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee[] SelectAllResult;
        
        public SelectAllResponse() {
        }
        
        public SelectAllResponse(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee[] SelectAllResult) {
            this.SelectAllResult = SelectAllResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelectByID", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SelectByIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public SelectByIDRequest() {
        }
        
        public SelectByIDRequest(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader, int id) {
            this.EmployeeManagerHeader = EmployeeManagerHeader;
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelectByIDResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SelectByIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee SelectByIDResult;
        
        public SelectByIDResponse() {
        }
        
        public SelectByIDResponse(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee SelectByIDResult) {
            this.SelectByIDResult = SelectByIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee emp;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader, EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee emp) {
            this.EmployeeManagerHeader = EmployeeManagerHeader;
            this.emp = emp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UpdateResult;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(string UpdateResult) {
            this.UpdateResult = UpdateResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EmployeeManagerWithSOAPHeaderSoapChannel : EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeManagerWithSOAPHeaderSoapClient : System.ServiceModel.ClientBase<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap>, EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap {
        
        public EmployeeManagerWithSOAPHeaderSoapClient() {
        }
        
        public EmployeeManagerWithSOAPHeaderSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeManagerWithSOAPHeaderSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeManagerWithSOAPHeaderSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeManagerWithSOAPHeaderSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllResponse EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap.SelectAll(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllRequest request) {
            return base.Channel.SelectAll(request);
        }
        
        public EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee[] SelectAll(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader) {
            EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllRequest inValue = new EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllRequest();
            inValue.EmployeeManagerHeader = EmployeeManagerHeader;
            EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllResponse retVal = ((EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap)(this)).SelectAll(inValue);
            return retVal.SelectAllResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllResponse> EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap.SelectAllAsync(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllRequest request) {
            return base.Channel.SelectAllAsync(request);
        }
        
        public System.Threading.Tasks.Task<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllResponse> SelectAllAsync(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader) {
            EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllRequest inValue = new EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectAllRequest();
            inValue.EmployeeManagerHeader = EmployeeManagerHeader;
            return ((EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap)(this)).SelectAllAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDResponse EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap.SelectByID(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDRequest request) {
            return base.Channel.SelectByID(request);
        }
        
        public EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee SelectByID(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader, int id) {
            EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDRequest inValue = new EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDRequest();
            inValue.EmployeeManagerHeader = EmployeeManagerHeader;
            inValue.id = id;
            EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDResponse retVal = ((EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap)(this)).SelectByID(inValue);
            return retVal.SelectByIDResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDResponse> EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap.SelectByIDAsync(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDRequest request) {
            return base.Channel.SelectByIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDResponse> SelectByIDAsync(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader, int id) {
            EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDRequest inValue = new EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.SelectByIDRequest();
            inValue.EmployeeManagerHeader = EmployeeManagerHeader;
            inValue.id = id;
            return ((EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap)(this)).SelectByIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateResponse EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap.Update(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public string Update(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader, EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee emp) {
            EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateRequest inValue = new EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateRequest();
            inValue.EmployeeManagerHeader = EmployeeManagerHeader;
            inValue.emp = emp;
            EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateResponse retVal = ((EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap)(this)).Update(inValue);
            return retVal.UpdateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateResponse> EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap.UpdateAsync(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        public System.Threading.Tasks.Task<EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateResponse> UpdateAsync(EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerHeader EmployeeManagerHeader, EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.Employee emp) {
            EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateRequest inValue = new EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.UpdateRequest();
            inValue.EmployeeManagerHeader = EmployeeManagerHeader;
            inValue.emp = emp;
            return ((EmployeeWebServiceClient.EmployeeManagerWithSOAPHeaderReference.EmployeeManagerWithSOAPHeaderSoap)(this)).UpdateAsync(inValue);
        }
    }
}
